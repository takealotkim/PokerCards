package org.example;
import org.example.Model.*;
import org.example.service.PokerCardFactory;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class PokerCardFactoryTest {


    @Test
    public void shouldCreateAKing(){
        System.out.println("create a card with input KD");
        //PokerCard expected = new King(Suite.DIAMOND);

        PokerCard result = PokerCardFactory.getPokerCard("KD");
        assertTrue( result instanceof King);
    }
    @Test
    public void shouldCreateAnAce(){
        System.out.println("create a card with input KD");
        //PokerCard expected = new King(Suite.DIAMOND);
        PokerCard result = PokerCardFactory.getPokerCard("AH");
        assertTrue( result instanceof Ace);
    }
    @Test
    public void shouldCreateAQueen(){
        System.out.println("create a card with input QS");
        //PokerCard expected = new King(Suite.DIAMOND);
        PokerCard result = PokerCardFactory.getPokerCard("QH");
        assertTrue( result instanceof Queen);
    }
    @Test
    public void shouldCreateAJack(){
        System.out.println("create a card with input JS");
        //PokerCard expected = new King(Suite.DIAMOND);
        PokerCard result = PokerCardFactory.getPokerCard("JC");
        assertTrue( result instanceof Jack);
    }
    @Test
    public void shouldCreateAJoker(){
        System.out.println("create a card with input QS");
        //PokerCard expected = new King(Suite.DIAMOND);
        PokerCard result = PokerCardFactory.getPokerCard("J");
        assertTrue( result instanceof Joker);
    }
    @Test
    public void shouldCreateATwo(){
        System.out.println("create a card with input QS");
        //PokerCard expected = new King(Suite.DIAMOND);
        PokerCard result = PokerCardFactory.getPokerCard("2H");
        assertTrue( (result.getValue()==2) );
    }
    @Test
    public void shouldCreateAThree(){
        System.out.println("create a card with input QS");
        //PokerCard expected = new King(Suite.DIAMOND);
        PokerCard result = PokerCardFactory.getPokerCard("3H");
        assertTrue( (result.getValue()==3) );
    }
    @Test
    public void shouldCreateATen(){
        System.out.println("create a card with input QS");
        //PokerCard expected = new King(Suite.DIAMOND);
        PokerCard result = PokerCardFactory.getPokerCard("10H");
        assertTrue( (result.getValue()==10) );
    }
}
